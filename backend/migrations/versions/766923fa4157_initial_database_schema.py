"""Initial database schema

Revision ID: 766923fa4157
Revises:
Create Date: 2025-08-17 09:50:40.587335

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = '766923fa4157'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chats',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('collection_ids', sa.Text(), server_default='[]', nullable=False),
    sa.Column('message_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_message_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('length(name) >= 1 AND length(name) <= 200', name='chk_chat_name_length'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chats_last_message_at', 'chats', ['last_message_at'], unique=False)
    op.create_index('idx_chats_updated_at', 'chats', ['updated_at'], unique=False)
    op.create_table('collections',
    sa.Column('id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=False),
    sa.Column('document_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('vector_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('length(name) >= 1 AND length(name) <= 200', name='chk_collection_name_length'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_collections_name', 'collections', ['name'], unique=False)
    op.create_index('idx_collections_updated_at', 'collections', ['updated_at'], unique=False)
    op.create_table('settings',
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.Column('value_type', sa.String(length=20), server_default='string', nullable=False),
    sa.Column('category', sa.String(length=50), server_default='general', nullable=False),
    sa.Column('description', sa.Text(), server_default='', nullable=False),
    sa.Column('is_sensitive', sa.Boolean(), server_default='false', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("category IN ('general', 'llm', 'embedding', 'paths', 'crawler')", name='chk_settings_category'),
    sa.CheckConstraint("value_type IN ('string', 'json', 'number', 'boolean')", name='chk_settings_value_type'),
    sa.PrimaryKeyConstraint('key')
    )
    op.create_index('idx_settings_category', 'settings', ['category'], unique=False)
    op.create_index('idx_settings_sensitive', 'settings', ['is_sensitive'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('chat_id', sa.String(length=32), nullable=False),
    sa.Column('role', sa.String(length=10), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('sources', sa.Text(), server_default='[]', nullable=False),
    sa.Column('message_metadata', sa.Text(), server_default='{}', nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("role IN ('user', 'assistant')", name='chk_message_role'),
    sa.CheckConstraint('length(content) > 0', name='chk_message_content_length'),
    sa.ForeignKeyConstraint(['chat_id'], ['chats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_chat_messages_chat_id', 'chat_messages', ['chat_id'], unique=False)
    op.create_index('idx_chat_messages_created_at', 'chat_messages', ['created_at'], unique=False)
    op.create_table('documents',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('collection_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('uri', sa.Text(), nullable=False),
    sa.Column('size_bytes', sa.Integer(), server_default='0', nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('chunk_count', sa.Integer(), server_default='0', nullable=False),
    sa.Column('status', sa.String(length=20), server_default='pending', nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('hash_md5', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("status IN ('pending', 'processing', 'indexed', 'failed')", name='chk_document_status'),
    sa.CheckConstraint("uri LIKE 'file://%' OR uri LIKE 'http://%' OR uri LIKE 'https://%'", name='chk_document_uri_format'),
    sa.CheckConstraint('size_bytes >= 0', name='chk_document_size'),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('collection_id', 'uri', name='uq_document_collection_uri')
    )
    op.create_index('idx_documents_collection_id', 'documents', ['collection_id'], unique=False)
    op.create_index('idx_documents_hash', 'documents', ['hash_md5'], unique=False)
    op.create_index('idx_documents_status', 'documents', ['status'], unique=False)
    op.create_index('idx_documents_updated_at', 'documents', ['updated_at'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), server_default='pending', nullable=False),
    sa.Column('collection_id', sa.String(length=100), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), server_default='0', nullable=False),
    sa.Column('input_params', sa.Text(), server_default='{}', nullable=False),
    sa.Column('stats', sa.Text(), server_default='{}', nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint("status IN ('pending', 'processing', 'success', 'failed')", name='chk_task_status'),
    sa.CheckConstraint("type IN ('ingest_files', 'ingest_urls')", name='chk_task_type'),
    sa.CheckConstraint('progress_percentage BETWEEN 0 AND 100', name='chk_task_progress'),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tasks_collection_id', 'tasks', ['collection_id'], unique=False)
    op.create_index('idx_tasks_created_at', 'tasks', ['created_at'], unique=False)
    op.create_index('idx_tasks_status', 'tasks', ['status'], unique=False)
    op.create_index('idx_tasks_type_status', 'tasks', ['type', 'status'], unique=False)
    op.create_table('document_chunks',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('document_id', sa.String(length=32), nullable=False),
    sa.Column('collection_id', sa.String(length=100), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content_preview', sa.Text(), nullable=True),
    sa.Column('start_char', sa.Integer(), nullable=True),
    sa.Column('end_char', sa.Integer(), nullable=True),
    sa.Column('vector_id', sa.String(length=100), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=True),
    sa.Column('chunk_metadata', sa.Text(), server_default='{}', nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('chunk_index >= 0', name='chk_chunk_index'),
    sa.CheckConstraint('start_char >= 0 AND (end_char IS NULL OR end_char > start_char)', name='chk_chunk_char_positions'),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'chunk_index', name='uq_chunk_doc_index'),
    sa.UniqueConstraint('vector_id')
    )
    op.create_index('idx_chunks_collection_id', 'document_chunks', ['collection_id'], unique=False)
    op.create_index('idx_chunks_document_id', 'document_chunks', ['document_id'], unique=False)
    op.create_index('idx_chunks_vector_id', 'document_chunks', ['vector_id'], unique=False)
    op.create_table('task_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.String(length=32), nullable=False),
    sa.Column('level', sa.String(length=10), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.Text(), server_default='{}', nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint("level IN ('debug', 'info', 'warning', 'error')", name='chk_log_level'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_task_logs_level', 'task_logs', ['level'], unique=False)
    op.create_index('idx_task_logs_task_id', 'task_logs', ['task_id'], unique=False)
    op.create_index('idx_task_logs_timestamp', 'task_logs', ['timestamp'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_task_logs_timestamp', table_name='task_logs')
    op.drop_index('idx_task_logs_task_id', table_name='task_logs')
    op.drop_index('idx_task_logs_level', table_name='task_logs')
    op.drop_table('task_logs')
    op.drop_index('idx_chunks_vector_id', table_name='document_chunks')
    op.drop_index('idx_chunks_document_id', table_name='document_chunks')
    op.drop_index('idx_chunks_collection_id', table_name='document_chunks')
    op.drop_table('document_chunks')
    op.drop_index('idx_tasks_type_status', table_name='tasks')
    op.drop_index('idx_tasks_status', table_name='tasks')
    op.drop_index('idx_tasks_created_at', table_name='tasks')
    op.drop_index('idx_tasks_collection_id', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index('idx_documents_updated_at', table_name='documents')
    op.drop_index('idx_documents_status', table_name='documents')
    op.drop_index('idx_documents_hash', table_name='documents')
    op.drop_index('idx_documents_collection_id', table_name='documents')
    op.drop_table('documents')
    op.drop_index('idx_chat_messages_created_at', table_name='chat_messages')
    op.drop_index('idx_chat_messages_chat_id', table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index('idx_settings_sensitive', table_name='settings')
    op.drop_index('idx_settings_category', table_name='settings')
    op.drop_table('settings')
    op.drop_index('idx_collections_updated_at', table_name='collections')
    op.drop_index('idx_collections_name', table_name='collections')
    op.drop_table('collections')
    op.drop_index('idx_chats_updated_at', table_name='chats')
    op.drop_index('idx_chats_last_message_at', table_name='chats')
    op.drop_table('chats')
    # ### end Alembic commands ###
